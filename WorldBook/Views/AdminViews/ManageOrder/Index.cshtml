@model WorldBook.ViewModel.AdminPaginatedOrderViewModel<WorldBook.ViewModel.OrderViewModel>

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Manage Orders";

    var currentStatus = Context.Request.Query["status"].ToString();
    var currentSearch = Context.Request.Query["search"].ToString();
}

<h2 class="mb-3">Order List</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<div class="card shadow-sm rounded-3 p-3">
    <!-- Filter & Search Section -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="btn-group">
            <a href="@Url.Action("Index")"
               class="btn @(string.IsNullOrEmpty(currentStatus) ? "btn-dark" : "btn-outline-dark")">
                All
            </a>
            <a href="@Url.Action("FilterOrdersByAdmin", new { status = "Not Approved", search = currentSearch, page = 1 })"
               class="btn @(currentStatus == "Not Approved" ? "btn-secondary" : "btn-outline-secondary")">
                Not Approved
            </a>
            <a href="@Url.Action("FilterOrdersByAdmin", new { status = "Preparing", search = currentSearch, page = 1 })"
               class="btn @(currentStatus == "Preparing" ? "btn-warning text-dark" : "btn-outline-warning")">
                Preparing
            </a>
            <a href="@Url.Action("FilterOrdersByAdmin", new { status = "Delivering", search = currentSearch, page = 1 })"
               class="btn @(currentStatus == "Delivering" ? "btn-info text-white" : "btn-outline-info")">
                Delivering
            </a>
            <a href="@Url.Action("FilterOrdersByAdmin", new { status = "Completed", search = currentSearch, page = 1 })"
               class="btn @(currentStatus == "Completed" ? "btn-success" : "btn-outline-success")">
                Completed
            </a>
            <a href="@Url.Action("FilterOrdersByAdmin", new { status = "Cancelled", search = currentSearch, page = 1 })"
               class="btn @(currentStatus == "Cancelled" ? "btn-danger" : "btn-outline-danger")">
                Cancelled
            </a>
        </div>

        <form method="get" action="@Url.Action("FilterOrdersByAdmin")" class="d-flex" style="max-width: 300px;">
            <input type="text" name="search" value="@currentSearch" class="form-control me-2" placeholder="Search by book or customer..." />
            <input type="hidden" name="status" value="@currentStatus" />
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-search"></i>
            </button>
        </form>
    </div>

    <!-- Info Statistics -->
    <div class="mb-3 text-muted">
        <small>Showing @(Model.Items.Any() ? ((Model.PageNumber - 1) * Model.PageSize + 1) : 0) to @(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount)) of @Model.TotalCount orders</small>
    </div>

    <!-- Table -->
    <table class="table table-hover align-middle">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Customer</th>
                <th>Address</th>
                <th>Books</th>
                <th>Order Date</th>
                <th>Delivered Date</th>
                <th>Status</th>
                <th>Payment Method</th>
                <th>Payment Status</th>
                <th>Total</th>
                <th>Discount</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Items.Any())
            {
                foreach (var order in Model.Items)
                {
                    var collapseId = $"books_{order.OrderId}";
                    <tr>
                        <td>@order.OrderId</td>
                        <td>@order.CustomerName</td>
                        <td>@order.Address</td>

                        <!-- Books Column -->
                        <td>
                            @if (order.Books != null && order.Books.Any())
                            {
                                if (order.Books.Count == 1)
                                {
                                    <div class="d-flex align-items-center">
                                        <img src="@order.Books.First().ImageUrl" alt="Book" width="45" height="60" class="rounded me-2 border" />
                                        <span>@order.Books.First().BookName</span>
                                    </div>
                                }
                                else
                                {
                                    <div>
                                        <a class="text-decoration-none fw-semibold"
                                           data-bs-toggle="collapse"
                                           href="#@collapseId"
                                           role="button"
                                           aria-expanded="false"
                                           aria-controls="@collapseId">
                                            <i class="bi bi-book"></i> @order.Books.Count books
                                        </a>
                                        <div class="collapse mt-2" id="@collapseId">
                                            @foreach (var book in order.Books)
                                            {
                                                <div class="d-flex align-items-center mb-1">
                                                    <img src="@book.ImageUrl" alt="Book" width="40" height="55" class="rounded me-2 border" />
                                                    <span>@book.BookName</span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <span class="text-muted">No books</span>
                            }
                        </td>

                        <td>@order.OrderDate?.ToString("dd/MM/yyyy")</td>
                        <td>@order.DeliveredDate?.ToString("dd/MM/yyyy")</td>

                        <!-- Status Badge -->
                        <td>
                            @{
                                string badgeClass = order.Status switch
                                {
                                    "Not Approved" => "secondary",
                                    "Preparing" => "warning",
                                    "Delivering" => "info",
                                    "Completed" => "success",
                                    "Cancelled" => "danger",
                                    _ => "dark"
                                };
                            }
                            <span class="badge bg-@badgeClass px-3 py-2">@order.Status</span>
                        </td>

                        <!-- Payment Method -->
                        <td>
                            @if (!string.IsNullOrEmpty(order.PaymentMethod))
                            {
                                string methodColor = order.PaymentMethod.ToLower() switch
                                {
                                    "online" => "info",
                                    "cash" => "warning text-dark",
                                    _ => "dark"
                                };
                                <span class="badge bg-@methodColor px-3 py-2 text-uppercase">@order.PaymentMethod</span>
                            }
                            else
                            {
                                <span class="text-muted">N/A</span>
                            }
                        </td>

                        <!-- Payment Status -->
                        <td>
                            @{
                                string payBadge = order.PaymentStatus?.ToLower() switch
                                {
                                    "paid" => "success",
                                    "unpaid" => "secondary",
                                    "failed" => "danger",
                                    _ => "dark"
                                };
                            }
                            <span class="badge bg-@payBadge px-3 py-2">@order.PaymentStatus</span>
                        </td>

                        <td>@String.Format("{0:N0}", order.TotalAmount) đ</td>
                        <td>@order.Discount %</td>

                        <!-- Actions -->
                        <td class="text-center">
                            <a asp-controller="Order" asp-action="Details" asp-route-id="@order.OrderId"
                               class="btn btn-sm btn-outline-primary me-1">
                                <i class="bi bi-eye"></i> View
                            </a>

                            @if (order.Status == "Not Approved")
                            {
                                <form asp-controller="Order" asp-action="Approve" asp-route-id="@order.OrderId"
                                      method="post" class="d-inline">
                                    <button type="submit" class="btn btn-sm btn-outline-success me-1">
                                        <i class="bi bi-check2-circle"></i> Approve
                                    </button>
                                </form>
                            }

                            @if (order.Status == "Preparing")
                            {
                                <form asp-controller="Order" asp-action="Approve" asp-route-id="@order.OrderId"
                                      method="post" class="d-inline">
                                    <button type="submit" class="btn btn-sm btn-outline-info me-1">
                                        <i class="bi bi-truck"></i> Deliver
                                    </button>
                                </form>
                            }

                            @if (order.Status == "Delivering")
                            {
                                <form asp-controller="Order" asp-action="Approve" asp-route-id="@order.OrderId"
                                      method="post" class="d-inline">
                                    <button type="submit" class="btn btn-sm btn-outline-success me-1">
                                        <i class="bi bi-bag-check"></i> Complete
                                    </button>
                                </form>
                            }

                            @if (order.Status != "Cancelled" && order.Status != "Completed")
                            {
                                <form asp-controller="Order" asp-action="Cancel" asp-route-id="@order.OrderId"
                                      method="post" class="d-inline">
                                    <button type="submit" class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-x-circle"></i> Cancel
                                    </button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="12" class="text-center text-muted">No orders found.</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination Controls -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <!-- Previous -->
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    @if (Model.HasPreviousPage)
                    {
                        <a class="page-link" href="@Url.Action("FilterOrdersByAdmin", new { status = currentStatus, search = currentSearch, page = Model.PageNumber - 1 })">
                            Previous
                        </a>
                    }
                    else
                    {
                        <span class="page-link">Previous</span>
                    }
                </li>

                <!-- Page Numbers -->
                @{
                    int startPage = Math.Max(1, Model.PageNumber - 2);
                    int endPage = Math.Min(Model.TotalPages, Model.PageNumber + 2);
                }

                @if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("FilterOrdersByAdmin", new { status = currentStatus, search = currentSearch, page = 1 })">1</a>
                    </li>
                    @if (startPage > 2)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("FilterOrdersByAdmin", new { status = currentStatus, search = currentSearch, page = i })">@i</a>
                    </li>
                }

                @if (endPage < Model.TotalPages)
                {
                    @if (endPage < Model.TotalPages - 1)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("FilterOrdersByAdmin", new { status = currentStatus, search = currentSearch, page = Model.TotalPages })">@Model.TotalPages</a>
                    </li>
                }

                <!-- Next -->
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    @if (Model.HasNextPage)
                    {
                        <a class="page-link" href="@Url.Action("FilterOrdersByAdmin", new { status = currentStatus, search = currentSearch, page = Model.PageNumber + 1 })">
                            Next
                        </a>
                    }
                    else
                    {
                        <span class="page-link">Next</span>
                    }
                </li>
            </ul>
        </nav>
    }
</div>

<style>
    img.rounded.border {
        object-fit: cover;
        border: 1px solid #ddd;
    }
</style>