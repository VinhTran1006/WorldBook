<!DOCTYPE html>
<html lang="en">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - WorldBook</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/UserViews/ChatAI/chatbot.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/WorldBook.styles.css" asp-append-version="true" />
</head>
<body>
    <header class="border-bottom mb-3">
        <nav class="navbar navbar-expand-lg navbar-dark custom-navbar p-3">

            <div class="container-fluid">
                <!-- Trái: Logo -->
                <a class="navbar-brand fw-bold" asp-area="" asp-controller="Home" asp-action="Home">
                    WorldBook
                </a>

                <!-- Nút toggle (hiện khi mobile) -->
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNavbar"
                        aria-controls="mainNavbar" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <!-- Giữa + Phải -->
                <div class="collapse navbar-collapse" id="mainNavbar">

                    <!-- Giữa: menu -->
                    <ul class="navbar-nav mx-auto mb-2 mb-lg-0">
                        @* <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Home">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Logins" asp-action="Login">Login</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Logins" asp-action="Logout">Logout</a>
                        </li> *@
                    </ul>

                    <!-- Phải: Profile -->
                    <div class="dropdown text-end">
                        <a href="#" class="d-flex align-items-center link-light text-decoration-none dropdown-toggle"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-person-circle fs-4 me-2"></i>
                            <strong>@User.Identity?.Name</strong>  <!-- hoặc thay bằng tên user -->
                        </a>

                        <ul class="dropdown-menu dropdown-menu-end text-small shadow">
                            <li>
                                <a class="dropdown-item" asp-controller="User" asp-action="Profile">
                                    <i class="bi bi-person me-2"></i> Profile
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="#">
                                    <i class="bi bi-clock-history"></i> Orders
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" asp-controller="Cart" asp-action="Index">
                                    <i class="bi bi-cart"></i> Cart
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <a class="dropdown-item text-danger" asp-controller="Logins" asp-action="Logout">
                                    <i class="bi bi-box-arrow-right me-2"></i> Sign out
                                </a>
                            </li>
                        </ul>
                    </div>

                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - WorldBook - <a asp-area="" asp-controller="Home" asp-action="#">Privacy</a>
        </div>
    </footer>
    <!-- 💬 Chat AI nổi góc trái -->
    <div id="chatbot-container">
        <div id="chatbot-toggle">
            <i class="bi bi-robot"></i>
        </div>

        <div id="chatbot-box" class="shadow">
            <div id="chatbot-header">
                <strong>WorldBook AI</strong>
                <span id="chatbot-close">&times;</span>
            </div>

            <div id="chatbot-messages"></div>

            <div id="chatbot-suggestions">
                <button class="chat-suggestion">Hôm nay có sách nào đang sale?</button>
                <button class="chat-suggestion">Sách nào vừa mới được ra mắt?</button>
                <button class="chat-suggestion">Cách đặt sách ở trang web?</button>
            </div>

            <div id="chatbot-input-area">
                <input type="text" id="chatbot-input" placeholder="Nhập câu hỏi..." />
                <button id="chatbot-send"><i class="bi bi-send"></i></button>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Script cho chatbot -->
    <script>
        const toggleBtn = document.getElementById("chatbot-toggle");
        const chatBox = document.getElementById("chatbot-box");
        const closeBtn = document.getElementById("chatbot-close");
        const sendBtn = document.getElementById("chatbot-send");
        const input = document.getElementById("chatbot-input");
        const messages = document.getElementById("chatbot-messages");
        const suggestBox = document.getElementById("chatbot-suggestions");

        // ✅ Danh sách gợi ý gốc
        const defaultSuggestions = [
            "Hôm nay có sách nào đang sale?",
            "Sách nào vừa mới được ra mắt?",
            "Cách đặt sách ở trang web?"
        ];

        // ✅ Gợi ý hiện tại (sẽ thay đổi sau khi user bấm)
        let suggestions = [...defaultSuggestions];

        // 🚀 Mở chat
        toggleBtn.onclick = () => {
            chatBox.style.display = "flex";
            toggleBtn.style.display = "none";

            // Khi mở lại chat → reset gợi ý và lời chào
            suggestions = [...defaultSuggestions];
            showWelcomeMessage();
        };

        // 🚪 Đóng chat
        closeBtn.onclick = () => {
            chatBox.style.display = "none";
            toggleBtn.style.display = "flex";
        };

        // 💬 Hiển thị lời chào đầu tiên
        function showWelcomeMessage() {
            messages.innerHTML = `
                <div class="message bot">
                    <i class="bi bi-robot"></i>
                    <div class="bubble">
                        Chào mừng bạn đến với <b>WorldBook Shop</b>!<br/>
                        Bạn cần tui tư vấn gì hông nè 😄
                    </div>
                </div>`;
            renderSuggestions();
        }

        // 🔁 Vẽ lại danh sách gợi ý
        function renderSuggestions() {
            suggestBox.innerHTML = "";

            if (suggestions.length === 0) {
                suggestBox.style.display = "none"; // Ẩn nếu hết
                return;
            }

            suggestBox.style.display = "flex";
            suggestions.forEach(q => {
                const btn = document.createElement("button");
                btn.className = "chat-suggestion";
                btn.textContent = q;
                btn.onclick = () => handleSuggestionClick(q);
                suggestBox.appendChild(btn);
            });
        }

        // 🧩 Thêm tin nhắn vào khung chat
        function addMessage(role, text) {
            const div = document.createElement("div");
            div.className = `message ${role}`;
            div.innerHTML = role === "bot"
                ? `<i class="bi bi-robot"></i><div class="bubble">${text}</div>`
                : `<div class="bubble">${text}</div><i class="bi bi-person-circle"></i>`;
            messages.appendChild(div);
            messages.scrollTop = messages.scrollHeight;
        }

        // 🧠 Khi người dùng chọn 1 gợi ý
        async function handleSuggestionClick(text) {
            // Xóa câu hỏi đã chọn khỏi danh sách
            suggestions = suggestions.filter(s => s !== text);
            renderSuggestions(); // cập nhật lại UI
            await sendMessage(text);
        }

        // 🚀 Gửi tin nhắn (từ input hoặc gợi ý)
        async function sendMessage(forcedText = null) {
            const msg = forcedText || input.value.trim();
            if (!msg) return;

            addMessage("user", msg);
            input.value = "";

            // Hiệu ứng đang gõ
            const typingEl = document.createElement("div");
            typingEl.className = "typing";
            typingEl.innerHTML = "<span>.</span><span>.</span><span>.</span>";
            messages.appendChild(typingEl);
            messages.scrollTop = messages.scrollHeight;

            try {
                const res = await fetch("/chat/ask", {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: "message=" + encodeURIComponent(msg)
                });

                const data = await res.json();
                typingEl.remove();

                addMessage("bot", data.reply || "Xin lỗi, AI hiện không thể trả lời được 😔");

                // Cập nhật gợi ý nếu còn
                if (suggestions.length > 0) renderSuggestions();
                else suggestBox.style.display = "none"; // 🔥 Ẩn hoàn toàn nếu hết
            } catch {
                typingEl.remove();
                addMessage("bot", "Xin lỗi, có lỗi xảy ra 😔");
            }
        }

        // 🎯 Gửi khi nhấn nút hoặc Enter
        sendBtn.onclick = () => sendMessage();
        input.addEventListener("keypress", e => {
            if (e.key === "Enter") sendMessage();
        });
    </script>



    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
