@model WorldBook.ViewModel.ProfileViewModel
@{
    Layout = "_UserLayout";
    ViewData["Title"] = "User Profile";
    var successMessage = TempData["SuccessMessage"] as string;
}
<link rel="stylesheet" href="~/css/UserViews/Profile/Profile.css" />

<div class="container mt-5">
    <div class="card shadow-lg p-4">
        <div class="card-body">
            <h2 class="text-center mb-4">User Profile</h2>

            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="alert alert-success">@successMessage</div>
            }

            <form asp-action="Edit" method="post" id="editForm">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="Username" class="form-label fw-bold"></label>
                        <input asp-for="Username" class="form-control" readonly />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Name" class="form-label fw-bold"></label>
                        <input asp-for="Name" class="form-control editable" readonly />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="Email" class="form-label fw-bold"></label>
                        <input asp-for="Email" class="form-control editable" readonly />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DateOfBirth" class="form-label fw-bold"></label>
                        <input asp-for="DateOfBirth" type="date" class="form-control editable" readonly />
                        <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="Gender" class="form-label fw-bold"></label>
                        <select asp-for="Gender" class="form-select editable" readonly>
                            <option value="">-- Select Gender --</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                        <span asp-validation-for="Gender" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Phone" class="form-label fw-bold"></label>
                        <input asp-for="Phone" class="form-control editable" readonly />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-3">
                    <label asp-for="Address" class="form-label fw-bold"></label>
                    <textarea asp-for="Address" class="form-control editable" rows="3" readonly></textarea>
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>

                <div class="text-center mt-4">
                    <button type="button" id="editButton" class="btn btn-primary">Edit</button>
                    <button type="submit" id="saveButton" class="btn btn-success d-none">Save</button>
                    <button type="button" id="cancelButton" class="btn btn-secondary d-none">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <partial name="_ValidationScriptsPartial" />
    <script>
        const editBtn = document.getElementById('editButton');
        const saveBtn = document.getElementById('saveButton');
        const cancelBtn = document.getElementById('cancelButton');
        const editableFields = document.querySelectorAll('.editable');

        editBtn.addEventListener('click', () => {
            editableFields.forEach(f => {
                f.removeAttribute('readonly');
            });
            editBtn.classList.add('d-none');
            saveBtn.classList.remove('d-none');
            cancelBtn.classList.remove('d-none');
        });

        cancelBtn.addEventListener('click', () => window.location.reload());
    </script>
}
