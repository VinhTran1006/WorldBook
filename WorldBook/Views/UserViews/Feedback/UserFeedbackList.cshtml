@model WorldBook.ViewModel.PaginatedFeedbackViewModel
@{
    ViewData["Title"] = "My Feedbacks";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<h2 class="text-center mb-4">
    <i class="bi bi-chat-left-text text-primary"></i> My Feedbacks
</h2>

@if (!Model?.CurrentOrderId.HasValue == true)
{
    <div class="btn-group mb-4 d-flex justify-content-center" role="group">
        <a href="@Url.Action("UserFeedbackList", new { filter = "all", page = 1 })"
           class="btn @(Model?.CurrentFilter == "all" ? "btn-primary" : "btn-outline-primary")">
            <i class="bi bi-list"></i> All
        </a>
        <a href="@Url.Action("UserFeedbackList", new { filter = "written", page = 1 })"
           class="btn @(Model?.CurrentFilter == "written" ? "btn-primary" : "btn-outline-primary")">
            <i class="bi bi-check-circle"></i> Written
        </a>
        <a href="@Url.Action("UserFeedbackList", new { filter = "notwritten", page = 1 })"
           class="btn @(Model?.CurrentFilter == "notwritten" ? "btn-primary" : "btn-outline-primary")">
            <i class="bi bi-pencil-square"></i> Not Written
        </a>
    </div>
}

@if (Model?.CurrentOrderId.HasValue == true)
{
    <div class="alert alert-info text-center">
        <i class="bi bi-info-circle"></i> Showing feedback for order
        <strong>#@Model.CurrentOrderId</strong>
    </div>
}

@if (!Model?.Feedbacks.Any() == true)
{
    <div class="text-center py-5">
        <i class="bi bi-emoji-smile display-3 text-muted"></i>
        <h5>You haven't written any feedback yet!</h5>
        <a href="@Url.Action("OrderHistory", "Order")" class="btn btn-primary mt-3">
            Go to My Orders
        </a>
    </div>
}
else
{
    <div class="row">
        @foreach (var item in Model.Feedbacks)
        {
            <div class="col-md-6 mb-4">
                <div class="card shadow-sm p-3">
                    <!-- Hiển thị Order ID ở đầu -->
                    <div class="mb-2">
                        <small class="badge bg-danger">Order #@item.OrderId</small>
                    </div>

                    <div class="d-flex align-items-center mb-2">
                        <img src="@item.ImageUrl" alt="@item.BookName" width="60" class="rounded me-3 border" />
                        <div>
                            <h5 class="mb-0">@item.BookName</h5>
                            <small class="text-muted">
                                @if (item.CreateAt.HasValue)
                                {
                                    @item.CreateAt?.ToString("dd/MM/yyyy")
                                }
                                else
                                {
                                    <span class="badge bg-warning">Not written</span>
                                }
                            </small>
                        </div>
                    </div>

                    @if (item.FeedbackId > 0 && item.CreateAt.HasValue)
                    {
                        <!-- Feedback đã viết -->
                        <div class="mb-2">
                            @for (int i = 0; i < item.Star; i++)
                            {
                                <i class="bi bi-star-fill text-warning"></i>
                            }
                            @for (int i = item.Star ?? 0; i < 5; i++)
                            {
                                <i class="bi bi-star text-muted"></i>
                            }
                        </div>
                        <p class="text-muted mb-3">@item.Comment</p>
                        <a href="@Url.Action("EditFeedback", new { feedbackId = item.FeedbackId })" class="btn btn-sm btn-warning">
                            <i class="bi bi-pencil"></i> Edit Feedback
                        </a>
                    }
                    else
                    {
                        <!-- Feedback chưa viết -->
                        <p class="text-muted text-center mb-3">
                            <i class="bi bi-info-circle"></i> No feedback yet
                        </p>
                        <a href="@Url.Action("WriteFeedback", new { orderId = item.OrderId })" class="btn btn-sm btn-primary w-100">
                            <i class="bi bi-pencil-square"></i> Write Feedback
                        </a>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation" class="mt-5">
            <ul class="pagination justify-content-center">
                <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("UserFeedbackList", new { filter = Model.CurrentFilter, page = Model.CurrentPage - 1 })">
                        <i class="bi bi-chevron-left"></i> Previous
                    </a>
                </li>

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("UserFeedbackList", new { filter = Model.CurrentFilter, page = i })">
                            @i
                        </a>
                    </li>
                }

                <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("UserFeedbackList", new { filter = Model.CurrentFilter, page = Model.CurrentPage + 1 })">
                        Next <i class="bi bi-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>

        <div class="text-center text-muted mt-3">
            <small>Page @Model.CurrentPage of @Model.TotalPages | Total: @Model.TotalItems items</small>
        </div>
    }
}