@model IEnumerable<WorldBook.ViewModel.OrderViewModel>

@{
    ViewData["Title"] = "Order History";
    Layout = "~/Views/Shared/_UserLayout.cshtml";

    var currentStatus = Context.Request.Query["status"].ToString();
    var currentSearch = Context.Request.Query["search"].ToString();
}

<h2 class="mb-4 text-center fw-bold">
    <i class="bi bi-clock-history text-primary"></i> Your Order History
</h2>

@if (!Model.Any() && string.IsNullOrEmpty(currentStatus) && string.IsNullOrEmpty(currentSearch))
{
    <div class="text-center py-5">
        <i class="bi bi-emoji-frown display-3 text-muted"></i>
        <h4 class="mt-3">You haven’t placed any orders yet</h4>
        <p class="text-muted">Start shopping now to see your orders appear here!</p>
        <a href="@Url.Action("GetBookHomePage", "Book")" class="btn btn-primary mt-2">
            <i class="bi bi-cart"></i> Shop Now
        </a>
    </div>
}
else

{
    <div class="card shadow-sm rounded-3 p-3 bg-white">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="btn-group">
                <a href="@Url.Action("FilterOrders", new { status = "", search = currentSearch })"
                   class="btn @(string.IsNullOrEmpty(currentStatus) ? "btn-dark" : "btn-outline-dark")">
                    All
                </a>

                <a href="@Url.Action("FilterOrders", new { status = "Not Approved", search = currentSearch })"
                   class="btn @(currentStatus == "Not Approved" ? "btn-secondary" : "btn-outline-secondary")">
                    Not Approved
                </a>

                <a href="@Url.Action("FilterOrders", new { status = "Preparing", search = currentSearch })"
                   class="btn @(currentStatus == "Preparing" ? "btn-warning text-dark" : "btn-outline-warning")">
                    Preparing
                </a>

                <a href="@Url.Action("FilterOrders", new { status = "Delivering", search = currentSearch })"
                   class="btn @(currentStatus == "Delivering" ? "btn-info text-white" : "btn-outline-info")">
                    Delivering
                </a>

                <a href="@Url.Action("FilterOrders", new { status = "Completed", search = currentSearch })"
                   class="btn @(currentStatus == "Completed" ? "btn-success" : "btn-outline-success")">
                    Completed
                </a>

                <a href="@Url.Action("FilterOrders", new { status = "Cancelled", search = currentSearch })"
                   class="btn @(currentStatus == "Cancelled" ? "btn-danger" : "btn-outline-danger")">
                    Cancelled
                </a>
            </div>


            <form method="get" action="@Url.Action("FilterOrders")" class="d-flex" style="max-width: 300px;">
                <input type="text" name="search" value="@(Context.Request.Query["search"])" class="form-control me-2" placeholder="Search by book name..." />
                <button type="submit" class="btn btn-primary"><i class="bi bi-search"></i></button>
            </form>
        </div>

        @if (!Model.Any())
        {
            <!-- ✅ Hiển thị thông báo nhẹ nhàng nếu không có đơn phù hợp -->
            <div class="text-center py-5">
                <i class="bi bi-inbox display-5 text-muted"></i>
                <h5 class="mt-3 text-secondary">No orders found for this status</h5>
            </div>
        }
        else
        {
        <table class="table table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>Books</th>
                    <th>Order Date</th>
                    <th>Delivered Date</th>
                    <th>Status</th>
                    <th>Payment Method</th>
                    <th>Payment Status</th>
                    <th>Total</th>
                    <th>Discount</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    var collapseId = $"books_{order.OrderId}";
                    <tr>
                        <td class="fw-semibold text-secondary">#@order.OrderId</td>

                        <!-- 📚 Cột sách hiển thị 1 quyển đầu + sổ xuống thêm -->
                        <td>
                            @if (order.Books != null && order.Books.Any())
                            {
                                var firstBook = order.Books.First();

                                <div class="d-flex align-items-center">
                                    <img src="@firstBook.ImageUrl"
                                         alt="@firstBook.BookName"
                                         width="45" height="60"
                                         class="rounded me-2 border" />
                                    <span>@firstBook.BookName</span>
                                </div>

                                @if (order.Books.Count > 1)
                                {
                                    <a class="d-inline-block mt-1 text-decoration-none text-primary small"
                                       data-bs-toggle="collapse"
                                       href="#@collapseId"
                                       role="button"
                                       aria-expanded="false"
                                       aria-controls="@collapseId">
                                        <i class="bi bi-caret-down-fill"></i>
                                        View @(order.Books.Count - 1) more
                                    </a>

                                    <div class="collapse mt-2" id="@collapseId">
                                        @foreach (var book in order.Books.Skip(1))
                                        {
                                            <div class="d-flex align-items-center mb-1 ms-4">
                                                <img src="@book.ImageUrl"
                                                     alt="@book.BookName"
                                                     width="40" height="55"
                                                     class="rounded me-2 border" />
                                                <span>@book.BookName</span>
                                            </div>
                                        }
                                    </div>
                                }
                            }
                            else
                            {
                                <span class="text-muted">No books</span>
                            }
                        </td>

                        <td>@order.OrderDate?.ToString("dd/MM/yyyy")</td>
                        <td>@order.DeliveredDate?.ToString("dd/MM/yyyy")</td>

                        <td>
                            @{
                                string badgeClass = order.Status switch
                                {
                                    "Not Approved" => "secondary",
                                    "Preparing" => "warning",
                                    "Delivering" => "info",
                                    "Completed" => "success",
                                    "Cancelled" => "danger",
                                    _ => "dark"
                                };
                            }
                            <span class="badge bg-@badgeClass px-3 py-2">@order.Status</span>
                        </td>
                        <td>@order.PaymentMethod</td>
                        <td>
                                @if (order.PaymentStatus == "Paid")
                                {
                                    <span class="badge bg-success">Paid</span>
                                }
                                else if (order.PaymentStatus == "Pending")
                                {
                                    <span class="badge bg-warning text-dark">Pending</span>
                                }
                                else if (order.PaymentStatus == "Failed")
                                {
                                    <span class="badge bg-danger">Failed</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">N/A</span>
                                }
                        </td>

                        <td class="fw-bold text-danger">@String.Format("{0:N0}", order.TotalAmount) ₫</td>
                        <td>@order.Discount %</td>

                        <td class="text-center">
                            <a asp-action="UserOrderDetails" asp-route-id="@order.OrderId"
                               class="btn btn-sm btn-outline-primary rounded-pill">
                                <i class="bi bi-eye"></i> View Details
                            </a>

                            @if (order.Status == "Not Approved")
                            {
                                <form asp-action="CancelUserOrder"
                                      asp-route-id="@order.OrderId"
                                      method="post"
                                      class="d-inline">
                                    <button type="submit"
                                            class="btn btn-sm btn-outline-danger rounded-pill"
                                            onclick="return confirm('Are you sure you want to cancel this order?');">
                                        <i class="bi bi-x-circle"></i> Cancel
                                    </button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        }
    </div>
}
